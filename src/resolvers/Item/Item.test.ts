/**
 * Tests of `Item` type generated by TypeGraphQL Prisma.
 */

import { Item } from "@generated/type-graphql";
import itemsByNames from "@src/resolvers/Item/ItemsByNames.test.graphql";
import { createItem, deleteTestItems } from "@src/testHelpers/Item.testData";
import { createServer } from "@src/testHelpers/server";
import { ServiceResponse } from "@src/testHelpers/types";

beforeAll(createItem);
afterAll(deleteTestItems);

describe("GraphQL CRUD API for Item type", () => {
    it("as any role for now should find any item", async () => {
        const server = await createServer(); // Default "user" role.

        const response = (await server.executeOperation({
            query: itemsByNames,
            variables: { names: ["TEST-staff-only-item"] },
        })) as ServiceResponse<"items", Item[]>;

        expect(response.errors).toBeUndefined();

        const items = response.data.items;
        expect(items.length).toBe(1);

        const item = items[0];
        expect(typeof item).toBe("object");
        expect(item).not.toBeNull();

        expect(typeof item.id).toBe("string");
        expect(item.name).toBe("TEST-staff-only-item");
    });

    // TODO
});
